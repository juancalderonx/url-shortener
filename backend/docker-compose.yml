services:
  my-service-production:
    container_name: my-service-production
    build:
      target: production
      context: .
      args:
        - PORT=${PORT:-3000}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512m"
        reservations:
          cpus: "0.25"
          memory: "256m"

  my-service-dev:
    container_name: my-service-dev
    restart: unless-stopped
    env_file: .env
    build:
      target: dev
      context: .
      args:
        - PORT=${PORT:-3000}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
      - "9229:9229"
    volumes:
      - ./src:/app/src
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512m"
        reservations:
          cpus: "0.25"
          memory: "256m"

  db:
    image: mysql:8.0
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
    command: >
      bash -c "
      echo \"GRANT ALL PRIVILEGES ON *.* TO '${MYSQL_USER}'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;\" > /docker-entrypoint-initdb.d/init.sql;
      exec docker-entrypoint.sh mysqld;
      "

volumes:
  db_data:
